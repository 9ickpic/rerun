const fs = require('fs-extra');
const path = require('path');
const chalk = require('chalk');

module.exports.setup = async frontendDir => {
	console.log(chalk.cyan('‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TailwindCSS...'));

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤ init
	const tailwindConfigPath = path.join(frontendDir, 'tailwind.config.js');
	const postcssConfigPath = path.join(frontendDir, 'postcss.config.js');
	const indexScssPath = path.join(frontendDir, 'src', 'index.scss');

	if ((await fs.pathExists(tailwindConfigPath)) && (await fs.pathExists(postcssConfigPath)) && (await fs.pathExists(indexScssPath))) {
		console.log(chalk.cyan('‚ÑπÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã TailwindCSS —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã –≤ init'));
		return;
	}

	// –ï—Å–ª–∏ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ, —Ç–∞–∫ –∫–∞–∫ init –∏—Ö —Å–æ–∑–¥–∞—ë—Ç), —Å–æ–∑–¥–∞—ë–º –∏—Ö
	const tailwindConfig = `
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
`;
	await fs.writeFile(tailwindConfigPath, tailwindConfig);
	console.log(chalk.green('üìù –°–æ–∑–¥–∞–Ω tailwind.config.js'));

	const postcssConfig = `
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
`;
	await fs.writeFile(postcssConfigPath, postcssConfig);
	console.log(chalk.green('üìù –°–æ–∑–¥–∞–Ω postcss.config.js'));

	await fs.ensureDir(path.join(frontendDir, 'src'));
	const indexScss = `
@tailwind base;
@tailwind components;
@tailwind utilities;
`;
	await fs.writeFile(indexScssPath, indexScss);
	console.log(chalk.green('üìù –°–æ–∑–¥–∞–Ω src/index.scss —Å –¥–∏—Ä–µ–∫—Ç–∏–≤–∞–º–∏ Tailwind'));

	console.log(chalk.green('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã TailwindCSS —Å–æ–∑–¥–∞–Ω—ã'));
};
