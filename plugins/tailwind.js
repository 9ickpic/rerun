// plugins/tailwind.js
const fs = require('fs-extra');
const path = require('path');
const { execSync } = require('child_process');

module.exports.setup = async () => {
	console.log('‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TailwindCSS...');
	try {
		execSync('npx tailwindcss init -p', { stdio: 'inherit' });
		console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã TailwindCSS —Å–æ–∑–¥–∞–Ω—ã');
	} catch (error) {
		throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ TailwindCSS: ${error.message}`);
	}

	// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ tailwind.config.js
	const tailwindConfig = `/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}`;
	try {
		await fs.writeFile('tailwind.config.js', tailwindConfig);
		console.log('üìù –§–∞–π–ª tailwind.config.js –æ–±–Ω–æ–≤–ª–µ–Ω');
	} catch (error) {
		throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ tailwind.config.js: ${error.message}`);
	}

	// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ postcss.config.js –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ SCSS
	const postcssConfig = `module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}`;
	try {
		await fs.writeFile('postcss.config.js', postcssConfig);
		console.log('üìù –§–∞–π–ª postcss.config.js –æ–±–Ω–æ–≤–ª–µ–Ω');
	} catch (error) {
		throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ postcss.config.js: ${error.message}`);
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ src/, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
	try {
		await fs.ensureDir('src');
		console.log('üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è src —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
	} catch (error) {
		throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ src: ${error.message}`);
	}

	// –°–æ–∑–¥–∞–Ω–∏–µ src/index.scss —Å –¥–∏—Ä–µ–∫—Ç–∏–≤–∞–º–∏ Tailwind
	const scssContent = `@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
`;
	try {
		await fs.writeFile('src/index.scss', scssContent);
		console.log('üìù –§–∞–π–ª src/index.scss —Å–æ–∑–¥–∞–Ω —Å –¥–∏—Ä–µ–∫—Ç–∏–≤–∞–º–∏ Tailwind');
	} catch (error) {
		throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ src/index.scss: ${error.message}`);
	}
};
